name: "Prepare node"
description: "Prepares node by installing node + dependencies"

inputs:
  npm_token:
    description: "may be needed to checkout submodules"
    required: true
  checkout_modules:
    description: "wether to checkout all submodules"
    required: false
  npm_registry:
    description: which npm registry to use
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout submodules using a PAT
      shell: bash
      if: ${{ inputs.checkout_modules == true }}
      run: |
        git config --file .gitmodules --get-regexp url | while read url; do
          git config --file=.gitmodules $(echo "$url" | sed -E "s/git@github.com:|https:\/\/github.com\//https:\/\/${{ inputs.NPM_TOKEN }}:${{ inputs.NPM_TOKEN }}@github.com\//")
        done
        git submodule sync
        git submodule update --init --recursive

    - name: setup node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18
        registry-url: ${{ inputs.npm_registry }}
      env:
        NODE_AUTH_TOKEN: ${{ inputs.npm_token }}

    - name: Install pnpm
      id: pnpm-install
      uses: pnpm/action-setup@v2
      with:
        version: 7
        run_install: false

    - name: Get pnpm store directory
      id: pnpm-cache
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

    - uses: actions/cache@v3
      name: Setup pnpm cache
      with:
        path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: install node packages
      run: pnpm install
      shell: bash
